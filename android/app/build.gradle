plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.notifications"
    compileSdkVersion localProperties.getProperty('flutter.compileSdkVersion').toInteger()
	ndkVersion localProperties.getProperty('flutter.ndkVersion')
    buildToolsVersion localProperties.getProperty('flutter.buildToolsVersion')

  

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.notifications"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion localProperties.getProperty('flutter.minSdkVersion').toInteger()
	    targetSdkVersion localProperties.getProperty('flutter.targetSdkVersion').toInteger()
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        //added due to build error after excluding x86
        multiDexEnabled = true
    }

    compileOptions {

        // Flag to enable support for the new language APIs
        //added from https://developer.android.com/studio/write/java8-support.html
        coreLibraryDesugaringEnabled = true

        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17

         
    }

    
    kotlin {
        jvmToolchain(17)
    }


    buildTypes {
         debug {
            //this is needed to fix issues with running in debug mode
            minifyEnabled true                    
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug

            ndk {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64' //, 'armeabi'  //, 'x86'
            }

        }
    }
}

flutter {
    source = "../.."
}



dependencies {
   
    //added as per https://developer.android.com/studio/write/java8-support.html
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'

}
